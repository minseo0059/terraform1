name: Terraform + Ansible Basic Setup

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment (dev/stage/prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stage
          - prod

env:
  AWS_REGION: "ap-northeast-2"
  TF_STATE_BUCKET: "your-terraform-state-bucket"
  ANSIBLE_SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # 저장소 Secrets에 등록된 SSH 키

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Apply
        run: |
          terraform init -backend-config="bucket=${{ env.TF_STATE_BUCKET}}"
          terraform apply -auto-approve -var="env=${{ github.event.inputs.env }}"

      - name: Get EC2 Public IP
        id: get_ip
        run: |
          IP=$(terraform output -raw ec2_public_ip | tr -d '"')
          echo "EC2_PUBLIC_IP=$IP" >> $GITHUB_OUTPUT

      - name: Wait for SSH
        run: |
          for i in {1..30}; do
            if nc -z -w 5 ${{ steps.get_ip.outputs.EC2_PUBLIC_IP }} 22; then
              echo "SSH 연결 성공"
              exit 0
            fi
            sleep 10
          done
          echo "::error::SSH 연결 실패"
          exit 1

      - name: Setup Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Create SSH Key File
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.ANSIBLE_SSH_KEY }}" > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key

      - name: Generate Ansible Inventory
        run: |
          cat <<EOF > inventory.ini
          [ec2_instances]
          target_server ansible_host=${{ steps.get_ip.outputs.EC2_PUBLIC_IP }} ansible_user=ubuntu
            ansible_ssh_private_key_file=~/.ssh/ec2_key
            ansible_python_interpreter=/usr/bin/python3

          [all:vars]
          ansible_ssh_common_args='-o StrictHostKeyChecking=no'
          EOF

      - name: Run Basic Playbook
        run: |
          cat <<EOF > playbook.yml
          ---
          - name: Basic EC2 Configuration
            hosts: ec2_instances
            become: yes
            tasks:
              - name: Install basic packages
                apt:
                  name: ["vim", "curl", "git", "unzip"]
                  state: present
                  update_cache: yes

              - name: Ensure Python3 is installed
                apt:
                  name: python3
                  state: present

              - name: Create setup marker file
                file:
                  path: /tmp/ansible_setup_complete
                  state: touch
          EOF

          ansible-playbook -i inventory.ini playbook.yml
