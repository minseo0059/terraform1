name: Terraform + Ansible Deployment

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment (dev/stage/prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stage
          - prod

env:
  AWS_REGION: "ap-northeast-2"
  TF_STATE_BUCKET: "your-terraform-state-bucket"
  KEY_NAME: "CH3-key"
  ANSIBLE_SSH_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      # === 1. 초기 설정 ===
      - name: Checkout Code
        uses: actions/checkout@v4

      # === 2. Terraform 설치 ===
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.6.6"

      # === 3. AWS 인증 ===
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # === 4. SSH 키 설정 ===
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.ANSIBLE_SSH_KEY }}" > ~/.ssh/CH3-key.pem
          chmod 600 ~/.ssh/CH3-key.pem
          echo "키 생성 완료. Fingerprint:"
          ssh-keygen -lf ~/.ssh/CH3-key.pem

      # === 5. Terraform 실행 ===
      - name: Terraform Init & Apply
        run: |
          terraform init -backend-config="bucket=${{ env.TF_STATE_BUCKET }}"
          terraform apply -auto-approve -var="env=${{ github.event.inputs.env }}"

      # === 6. 인스턴스 IP 획득 ===
      - name: Get EC2 IP
        id: get_ip
        run: |
          IP=$(terraform output -raw ec2_public_ip | tr -d '"')
          echo "EC2_PUBLIC_IP=$IP" >> $GITHUB_OUTPUT
          echo "확인된 IP: $IP"

      # === 7. Ansible 설치 ===
      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      # === 8. Ansible 인벤토리 생성 ===
      - name: Create Inventory
        run: |
          cat <<EOF > inventory.ini
          [webserver]
          ${{ steps.get_ip.outputs.EC2_PUBLIC_IP }}

          [all:vars]
          ansible_user=ubuntu
          ansible_ssh_private_key_file=~/.ssh/CH3-key.pem
          ansible_python_interpreter=/usr/bin/python3
          ansible_ssh_common_args='-o StrictHostKeyChecking=no'
          EOF

      # === 9. Ansible 플레이북 실행 ===
      - name: Run Ansible Playbook
        run: |
          cat <<'EOF' > playbook.yml
          ---
          - name: Configure EC2 Server
            hosts: webserver
            become: yes

            tasks:
              - name: Update apt cache
                apt:
                  update_cache: yes

              - name: Install essential packages
                apt:
                  name:
                    - nginx
                    - docker.io
                    - python3-pip
                  state: present

              - name: Start Nginx service
                service:
                  name: nginx
                  state: started
                  enabled: yes

              - name: Create deployment user
                user:
                  name: deployer
                  groups: sudo
                  append: yes
                  shell: /bin/bash

              - name: Add SSH key for deployer
                authorized_key:
                  user: deployer
                  key: "${{ secrets.DEPLOYER_SSH_KEY }}"

              - name: Ensure Docker group exists
                group:
                  name: docker
                  state: present

              - name: Add users to Docker group
                user:
                  name: "{{ item }}"
                  groups: docker
                  append: yes
                loop:
                  - ubuntu
                  - deployer

              - name: Create success marker
                file:
                  path: /tmp/deployment_success
                  state: touch
          EOF

          ansible-playbook -i inventory.ini playbook.yml -vvv

      # === 10. 결과 검증 ===
      - name: Verify Deployment
        run: |
          ssh -i ~/.ssh/CH3-key.pem ubuntu@${{ steps.get_ip.outputs.EC2_PUBLIC_IP }} \
            "curl -s localhost && echo '' && docker --version"
