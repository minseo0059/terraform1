name: Terraform + Ansible All-in-One

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment (dev/stage/prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stage
          - prod

env:
  AWS_REGION: "ap-northeast-2"
  TF_STATE_BUCKET: "your-terraform-state-bucket"
  KEY_NAME: "CH3-key"
  ANSIBLE_SSH_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}  # SSH 키 통일

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      # === 1. 초기 설정 ===
      - name: Checkout Code
        uses: actions/checkout@v4

      # === 2. Terraform 설치 ===
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.6.6"

      # === 3. AWS 인증 ===
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # === 4. SSH 키 설정 ===
      - name: Create SSH Key File
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.ANSIBLE_SSH_KEY }}" > ~/.ssh/CH3-key.pem
          chmod 600 ~/.ssh/CH3-key.pem
          ssh-keygen -y -f ~/.ssh/CH3-key.pem > ~/.ssh/CH3-key.pub

      # === 5. Terraform 초기화 ===
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TF_STATE_BUCKET }}" \
            -backend-config="key=${{ github.event.inputs.env }}/terraform.tfstate"

      # === 6. Terraform 적용 ===
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="env=${{ github.event.inputs.env }}" \
            -var="key_name=${{ env.KEY_NAME }}"

      # === 7. EC2 IP 획득 ===
      - name: Get EC2 Public IP
        id: get_ip
        run: |
          IP=$(terraform output -raw ec2_public_ip | sed 's/"//g' | tr -d '\n\r')
          if [ -z "$IP" ]; then
            echo "::error::EC2 Public IP를 가져오지 못했습니다"
            exit 1
          fi
          echo "EC2_PUBLIC_IP=$IP" >> $GITHUB_OUTPUT
          echo "확인된 EC2 Public IP: $IP"  # 디버깅용 출력

      # === 8. SSH 연결 대기 ===
      - name: Wait for SSH
        run: |
          for i in {1..30}; do
            if nc -z -w 5 ${{ steps.get_ip.outputs.EC2_PUBLIC_IP }} 22; then
              echo "SSH 연결 성공"
              exit 0
            fi
            sleep 10
            echo "SSH 연결 시도 중... ($i/30)"
          done
          echo "::error::SSH 연결 실패"
          exit 1

      # === 9. Ansible 환경 설정 ===
      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      # === 10. Ansible 인벤토리 생성 ===
      - name: Generate Inventory
        run: |
          cat <<EOF > inventory.ini
          [ec2_instances]
          target_server ansible_host=${{ steps.get_ip.outputs.EC2_PUBLIC_IP }} ansible_user=ubuntu
            ansible_ssh_private_key_file=~/.ssh/CH3-key.pem
            ansible_python_interpreter=/usr/bin/python3

          [all:vars]
          ansible_ssh_common_args='-o StrictHostKeyChecking=no'
          EOF

      # === 11. Ansible 플레이북 실행 ===
      - name: Run Ansible Playbook
        run: |
          cat <<EOF > playbook.yml
          ---
          - name: Basic EC2 Setup
            hosts: ec2_instances
            become: yes
            tasks:
              - name: Update apt cache
                apt:
                  update_cache: yes

              - name: Install essential packages
                apt:
                  name: ["vim", "curl", "git", "unzip", "python3-pip"]
                  state: present

              - name: Ensure Python3 is available
                raw: which python3 || (apt-get update && apt-get install -y python3)

              - name: Create marker file
                file:
                  path: /tmp/github_actions_success
                  state: touch
                  mode: '0644'
          EOF

          ansible-playbook -i inventory.ini playbook.yml

      # === 12. 실행 결과 확인 ===
      - name: Verify Setup
        run: |
          ssh -i ~/.ssh/CH3-key.pem ubuntu@${{ steps.get_ip.outputs.EC2_PUBLIC_IP }} \
            "ls -l /tmp/github_actions_success && echo 'Ansible 실행 성공!'"
